# SD Systems CP/M 2.2 test for SIMH/AltairZ80
#
# Copyright (c) 2025 Patrick Linstruth
# https://github.com/deltecent
#
# Boot SD Systems CP/M 2.2
#

set env AZ80_TEST_NAME=Tarbell CP/M 2.2 Test
set env AZ80_TEST_BIN=tarbell_cpm2
echof "\r\n*** %SIM_NAME%: %AZ80_TEST_NAME% starting:"
echof "\r\n*** Setting initial conditions"
if not exist %AZ80_TEST_BIN%.zip curl "https://raw.githubusercontent.com/deltecent/altairz80-packages/main/%AZ80_TEST_BIN%/%AZ80_TEST_BIN%.zip" --output %AZ80_TEST_BIN%.zip
!unzip -o %AZ80_TEST_BIN%.zip "*.DSK"

noexpect
set runlimit 20M instructions
d sleep 0
set on
on error ignore
on runtime echof "\r\n*** Test Runtime Limit %SIM_RUNLIMIT% %SIM_RUNLIMIT_UNITS% Exceeded ***\n"; goto FAIL

set cpu 64k
set cpu itrap
set cpu z80
set cpu noaltairrom
set hdsk dis
;set debug stdout

; Configure disk controller for SD Systems CP/M 2
set tarbell en

; Attach CP/M 2.2 disk images
att tarbell0 TARBELL_CPM22_48K_SSSD.DSK
att tarbell1 TARBELL_BLANK_SSSD.DSK

:TARBELL_FLOPPY_TEST
echof "\r\n*** Format Floppy Test"

:TARBELL_FLOPPY_SSSD
noexpect
expect "A>"; send "\n"; goto FLPYFMT
expect "\r\n." ; goto FAIL
boot tarbell
goto FAIL

:FLPYFMT
call FLPYFORMAT
call FLPYCOPY 82
call SYSGEN A B
goto PASS

:FLPYFORMAT
; Format floppy <drive> <density> <sided>
noexpect
expect "A>" ; send "FORMAT\n"; go -q
expect "(F OR Q) ? " ; send "F"; go -q
expect "FORMATTING COMPLETE" ; go -q
expect "(F OR Q) ? " ; send "Q"; go -q
expect "A>" ; send "\003"; return
go -q
goto FAIL

:FLPYCOPY
noexpect
expect "A>" ; send "PIP B:=A:*.*\n" ; go -q
expect "A>" ; send "STAT B:\n" ; go -q
expect "B: %1k" ; return
go -q
goto FAIL

:SYSGEN
noexpect
expect "A>" ; send "SYSGEN\r" ; go -q
expect "SOURCE DRIVE NAME"; send "%1" ; go -q
expect "THEN TYPE RETURN" ; send "\r"; go -q
expect "FUNCTION COMPLETE" ; go -q
expect "DESTINATION DRIVE NAME" ; send "%2" ; go -q
expect "THEN TYPE RETURN" ; send "\r"; go -q
expect "FUNCTION COMPLETE" ; go -q
expect "DESTINATION DRIVE NAME" ; send "\r" ; go -q
expect "A>" ; return
go -q
goto FAIL

# All test failures wind up here.
:FAIL
echof "\n\r*** FAILED - %SIM_NAME%: %AZ80_TEST_NAME%.\n"
exit 1

# Test passed.
:PASS
detach tarbell0
detach tarbell1

set tarbell -f disabled

# Remove disk images
del TARBELL_CPM22_48K_SSSD.DSK
del TARBELL_BLANK_SSSD.DSK
del tarbell_cpm2.zip

echof "\n\r*** PASSED - %SIM_NAME%: %AZ80_TEST_NAME%.\n"

:DONE
