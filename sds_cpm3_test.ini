# SD Systems Banked CP/M 3 test for SIMH/AltairZ80
#
# Copyright (c) 2025 Patrick Linstruth
# https://github.com/deltecent
#
# Boot SD Systems Banked CP/M 3
#

set env AZ80_TEST_NAME=SD Systems Banked CP/M 3 Test
set env AZ80_TEST_BIN=sds_cpm3
echof "\r\n*** %SIM_NAME%: %AZ80_TEST_NAME% starting:"
echof "\r\n*** Setting initial conditions"
if not exist %AZ80_TEST_BIN%.zip curl "https://raw.githubusercontent.com/deltecent/altairz80-packages/main/%AZ80_TEST_BIN%/%AZ80_TEST_BIN%.zip" --output %AZ80_TEST_BIN%.zip
!unzip -o %AZ80_TEST_BIN%.zip '*.dsk'

noexpect
set runlimit 100M instructions
d sleep 0
set on
on error ignore
on runtime echof "\r\n*** Test Runtime Limit %SIM_RUNLIMIT% %SIM_RUNLIMIT_UNITS% Exceeded ***\n"; goto FAIL

set cpu 64k
set cpu banked
set cpu itrap
set cpu z80
set cpu noaltairrom
set cpu eram
set hdsk dis

;set debug stdout

; Configure CP/M 3
d common c000

; Configure SBC200 and Interrupts
set sbc200 ena

; Configure disk controller for SD Systems CP/M 2
set vfii en
dep dsmask 80

; Attach CP/M 2.2 disk images
att vfii0 SDS_CPM3_60K.dsk
att vfii1 SDS_CPM3_BLANK.dsk

:SDOS_FLOPPY_TEST
echof "\r\n*** Format Floppy Test (SSDD)"

:SDOS_FLOPPY_SSSD
noexpect
expect "A>"; send "\n"; goto FLPYFMTSSSD
expect "\r\n." ; goto FAIL
reset
g f000
goto FAIL

:FLPYFMTSSSD
call FLPYFORMAT 	; Format B: SSDD
call FLPYCOPY 220
call GENCPM
call COPYSYS
call REBOOT 01
goto PASS

:FLPYFORMAT
; Format floppy <drive> <density> <sided>
noexpect
expect "A>" ; send "FORMAT\n"; go -q
expect "Enter Drive To Format  (A..P)" ; send "\r"; go -q
expect "Do You Wish to Format Drive <B>" ; send "\r" ; go -q
expect "Single, or Double Density" ; send "\r" ; go -q
expect "5\"  or 8\"" ; send "\r" ; go -q
expect "Single, or Double Sided" ; send "\r" ; go -q
expect ":77" ; send "77" ; go -q
expect "Enter <Return> to Continue, or Q to Quit" ; send "\r" ; go -q
expect "Format Completed" ; go -q
expect "Do You Wish To Format another Diskette ? (Y/N)" ; send "\r" ; go -q
expect "A>" ; send "\003"; return
go -q
goto FAIL

:FLPYCOPY
noexpect
expect "A>" ; send "PIP B:=A:*.*\r" ; go -q
expect "A>" ; send "SHOW B:\r" ; go -q
expect "B: %1k" ; go -q
expect "A>" ; send "\r" ; return
go -q
goto FAIL

:GENCPM
noexpect
expect "A>" ; send "GENCPM AUTO DISPLAY\r" ; go -q
expect "*** CP/M 3.0 SYSTEM GENERATION DONE ***"; go -q
expect "A>" ; send "\r" ; return
go -q
goto FAIL

:COPYSYS
noexpect
expect "A>" ; send "COPYSYS COLD.COM\r" ; go -q
expect "Destination drive name (or return to reboot)"; send "B"; go -q
expect "Destination on B then type return"; send "\r"; go -q
expect "Function complete"; go -q
expect "Do you wish to copy CPM3.SYS?"; send "N"; return
expect "A>" ; send "\r" ; return
go -q
goto FAIL

:REBOOT
noexpect
expect "\r\n." ; send "C%1\r"; go -q
expect "A>" ; send "DIR [sort]\r"; go -q
expect "Press RETURN to Continue"; send "\r"; go -q
expect "A>" ; return
reset cpu
reset sbc200
g e000
go -q
goto FAIL

# All test failures wind up here.
:FAIL
echof "\n\r*** FAILED - %SIM_NAME%: %AZ80_TEST_NAME%.\n"
exit 1

# Test passed.
:PASS
detach vfii0
detach vfii1

set vfii disabled
set -f sbc200 disabled

# Set wd179x iobase back to default and disable.
set wd179x iobase=30
set wd179x disabled

# Remove disk images
del SDS_CPM3_60K.dsk
del SDS_CPM3_BLANK.dsk
del sds_cpm3.zip

echof "\n\r*** PASSED - %SIM_NAME%: %AZ80_TEST_NAME%.\n"

:DONE
