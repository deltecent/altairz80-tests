# Advanced Digital Corp CP/M 3 test for SIMH/AltairZ80
#
# Copyright (c) 2022 Howard M. Harte.
# https://github.com/hharte
#
# Boot CP/M 3, test floppy and HDC-1001.
#

set env AZ80_TEST_NAME=ADC Super Six CP/M 3 Test
set env AZ80_TEST_BIN=adc_cpm3
echof "\r\n*** %SIM_NAME%: %AZ80_TEST_NAME% starting:"
echof "\r\n*** Setting initial conditions"
if not exist %AZ80_TEST_BIN%.zip curl "https://raw.githubusercontent.com/hharte/altairz80-packages/main/%AZ80_TEST_BIN%/%AZ80_TEST_BIN%.zip" --output %AZ80_TEST_BIN%.zip
!unzip -o %AZ80_TEST_BIN%.zip ADC_CPM3.img ADC_BLANK*.imd Q2020_BOOT.dsk

noexpect
set runlimit 100M instructions
d sleep 0
set on
on error ignore
on runtime echof "\r\n*** Test Runtime Limit %SIM_RUNLIMIT% %SIM_RUNLIMIT_UNITS% Exceeded ***\n"; goto FAIL

set cpu 64k
set cpu banked
set cpu itrap
set cpu z80
set cpu noaltairrom
set hdsk dis
;set debug stdout

; Configure Console UART (Emulating ADC Super-Six Serial Port)
set sio ansi
set sio port=00/0/0/0/0/F/0/T
set sio port=01/0/81/0/84/F/0/F

; Configure disk controller
set wd179x en
set wd179x iobase=0c

; Configure ADC Super-Six CPU Board
set adcs6 en
set adcs6 rom=adc
att adcs60 ADC_CPM3.img
att adcs61 ADC_BLANK_SSSD.imd

; Configure ADC HDC-1001 Disk Controller
set adchd en
set adchd iobase=e0
attach adchd0 Q2020_BOOT.dsk

:ADCS6_FLOPPY_TEST
echof "\r\n*** Format Floppy Test (SSSD)"

:ADCS6_FLOPPY_SSSD
expect "Read error: file  OSLOAD  SYS" ; goto FAIL
expect "FDC COLD BOOT ERROR CODE " ; goto FAIL
expect "A>"; send "\n"; goto FLPYFMTSSSD
reset
boot adcs6
goto FAIL

:FLPYFMTSSSD
call FLPYFORMAT 1 S S	; Format B: SSSD
call FLPYCOPY 26k

:REBOOTCPM
echof "\r\n*** Booting CP/M 3 (SSSD)"
noexpect
reset
expect "Read error: file  OSLOAD  SYS" ; goto FAIL
expect "FDC COLD BOOT ERROR CODE " ; goto FAIL
expect "A>" ; send "SHOW A: [DRIVE]\n" ; go -c
expect "A>" ; goto ADCS6_FLOPPY_SSDD

det adcs60
det adcs61
att adcs60 ADC_BLANK_SSSD.imd
att adcs61 ADC_BLANK_SSDD.imd

; Boot ADC Monitor
boot adcs6
goto FAIL


:ADCS6_FLOPPY_SSDD
echof "\r\n*** Format Floppy Test (SSDD)"
send "\n"
call FLPYFORMAT 1 D S	; Format B: SSDD
call FLPYCOPY 376k

:REBOOTCPM2
echof "\r\n*** Booting CP/M 3 (SSDD)"
noexpect
reset
expect "Read error: file  OSLOAD  SYS" ; goto FAIL
expect "FDC COLD BOOT ERROR CODE " ; goto FAIL
expect "A>" ; send "SHOW A: [DRIVE]\n" ; go -c
expect "\r\n\r\n\r\nA>" ; goto ADCS6_FLOPPY_DSDD

det adcs60
det adcs61
att adcs60 ADC_BLANK_SSDD.imd
att adcs61 ADC_BLANK_DSDD.imd

; Boot ADC Monitor
boot adcs6
goto FAIL

:ADCS6_FLOPPY_DSDD
echof "\r\n*** Format Floppy Test (DSDD)"
send "\n"
call FLPYFORMAT 1 D D	; Format B: DSDD
call FLPYCOPY 980k

:HDCTEST
call HDCFORMAT
goto PASS

:FLPYFORMAT
; Format floppy <drive> <density> <sided>
noexpect
expect "A>" ; send "FORMAT\n"; go -q
expect "Enter Disk Drive To Be Formatted (0-3) : " ; send "%1\n"; go -q
expect "Enter Density, Single or Double  (S,D) : " ; send "%2\n"; go -q
expect "Format Single or Double Sided    (S,D) : " ; send "%3\n"; go -q
expect "Format System Tracks only        (Y,N) : " ; send "N\n"; go -q
expect "Supress Format Verification      (Y,N) : " ; send "N\n"; go -q
expect "Insert Diskett Into Drive %1 And Press The Return Key" ; send "\r"; go -q
expect "Formatting Complete" ; send "\r" ; go -q
expect "A>" ; send "\003"; return
expect "WRITE ERROR" ; goto FAIL
go -q
goto FAIL

:FLPYCOPY
noexpect
expect "A>" ; send "PIP B:=A:*.*\n" ; go -q
expect "A>" ; send "SHOW B:\n" ; go -q
expect "%1\r\n\r\n\r\nA>" ; send "ldrgen f8.ldr\n" ; go -q
expect "Write loader to Hard or Floppy  drive    (H,F) : " ; send "F" ; go -q
expect "Physical drive no. of loader destination (0-3) : " ; send "1" ; go -q
expect "A>" ; send "SHOW B: [DRIVE]\n" ; go -q
expect "Physical Record" ; return
expect "BIOS Error on" ; goto FAIL
go -q
goto FAIL

:HDCFORMAT
noexpect
# Format HDC-1001
expect "A>" ; echof "\r\n*** Formatting HDC-1001 Q2020..."; send "FMTHD\n"; go -q
expect "Enter drive to format: " ; send "15\n"; go -q
expect "Which physical hard disk do you want to format. (0-3)? " ; send "0"; go -q
expect "Hit return to continue or ^C to abort." ; send "\r"; go -q
expect "\r\nA>" ; send "SHOW C:\n"; go -q
expect "\r\nA>" ; send "PIP C:=A:*.*\n"; go -q
expect "\r\nA>" ; send "DIR C:\n"; go -q
expect "\r\nA>" ; send "SHOW C:\n"; go -q
expect "C: RW, Space:     7,912k" ; return

go -q
goto FAIL

# All test failures wind up here.
:FAIL
echof "\n\r*** FAILED - %SIM_NAME%: %AZ80_TEST_NAME%.\n"
exit 1

# Test passed.
:PASS
set sio port=00
set sio port=01

detach adchd0
set adchd disabled

detach adcs60
detach adcs61
set adcs6 disabled

; Set wd179x iobase back to default and disable.
set wd179x iobase=30
set wd179x disabled

echof "\n\r*** PASSED - %SIM_NAME%: %AZ80_TEST_NAME%.\n"
goto DONE

:DONE